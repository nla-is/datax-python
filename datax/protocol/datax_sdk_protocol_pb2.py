# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: datax-sdk-protocol.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x64\x61tax-sdk-protocol.proto\x12\x15\x64\x61tax.sdk.protocol.v2\x1a\x1bgoogle/protobuf/empty.proto\"\n\n\x08Settings\"\x10\n\x0eInitialization\"\r\n\x0bNextOptions\">\n\x0bNextMessage\x12\x11\n\treference\x18\x01 \x01(\t\x12\x0e\n\x06stream\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\".\n\x0b\x45mitMessage\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x11\n\treference\x18\x02 \x01(\t\"\x0c\n\nEmitResult\"\x13\n\x11GetRequestOptions\"8\n\x07Request\x12\x0e\n\x06sender\x18\x01 \x01(\t\x12\x0f\n\x07\x62\x61\x63kend\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\x0c\"\x15\n\x05Reply\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x0c\"\r\n\x0bReplyResult\"\x1d\n\rFanOutRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x0c\"\x1e\n\x0e\x46\x61nOutResponse\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x0c\"\x07\n\x05\x45mpty\"E\n\x0e\x46\x61nOutDataItem\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x14\n\x0c\x64\x61ta_item_id\x18\x02 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x32\xd2\x04\n\x05\x44\x61taX\x12V\n\nInitialize\x12\x1f.datax.sdk.protocol.v2.Settings\x1a%.datax.sdk.protocol.v2.Initialization\"\x00\x12P\n\x04Next\x12\".datax.sdk.protocol.v2.NextOptions\x1a\".datax.sdk.protocol.v2.NextMessage\"\x00\x12O\n\x04\x45mit\x12\".datax.sdk.protocol.v2.EmitMessage\x1a!.datax.sdk.protocol.v2.EmitResult\"\x00\x12U\n\x06\x46\x61nOut\x12$.datax.sdk.protocol.v2.FanOutRequest\x1a%.datax.sdk.protocol.v2.FanOutResponse\x12V\n\nGetRequest\x12(.datax.sdk.protocol.v2.GetRequestOptions\x1a\x1e.datax.sdk.protocol.v2.Request\x12P\n\x0cReplyRequest\x12\x1c.datax.sdk.protocol.v2.Reply\x1a\".datax.sdk.protocol.v2.ReplyResult\x12M\n\rSubmitRequest\x12\x1e.datax.sdk.protocol.v2.Request\x1a\x1c.datax.sdk.protocol.v2.Reply2\xab\x01\n\x06\x46\x61nOut\x12O\n\x08GetInput\x12\x1c.datax.sdk.protocol.v2.Empty\x1a%.datax.sdk.protocol.v2.FanOutDataItem\x12P\n\tSetOutput\x12%.datax.sdk.protocol.v2.FanOutDataItem\x1a\x1c.datax.sdk.protocol.v2.EmptyB,Z*github.com/nla-is/datax-sdk-protocol/v2;v2b\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'datax_sdk_protocol_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z*github.com/nla-is/datax-sdk-protocol/v2;v2'
  _SETTINGS._serialized_start=80
  _SETTINGS._serialized_end=90
  _INITIALIZATION._serialized_start=92
  _INITIALIZATION._serialized_end=108
  _NEXTOPTIONS._serialized_start=110
  _NEXTOPTIONS._serialized_end=123
  _NEXTMESSAGE._serialized_start=125
  _NEXTMESSAGE._serialized_end=187
  _EMITMESSAGE._serialized_start=189
  _EMITMESSAGE._serialized_end=235
  _EMITRESULT._serialized_start=237
  _EMITRESULT._serialized_end=249
  _GETREQUESTOPTIONS._serialized_start=251
  _GETREQUESTOPTIONS._serialized_end=270
  _REQUEST._serialized_start=272
  _REQUEST._serialized_end=328
  _REPLY._serialized_start=330
  _REPLY._serialized_end=351
  _REPLYRESULT._serialized_start=353
  _REPLYRESULT._serialized_end=366
  _FANOUTREQUEST._serialized_start=368
  _FANOUTREQUEST._serialized_end=397
  _FANOUTRESPONSE._serialized_start=399
  _FANOUTRESPONSE._serialized_end=429
  _EMPTY._serialized_start=431
  _EMPTY._serialized_end=438
  _FANOUTDATAITEM._serialized_start=440
  _FANOUTDATAITEM._serialized_end=509
  _DATAX._serialized_start=512
  _DATAX._serialized_end=1106
  _FANOUT._serialized_start=1109
  _FANOUT._serialized_end=1280
# @@protoc_insertion_point(module_scope)
